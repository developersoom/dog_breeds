{"version":3,"sources":["components/Heart.jsx","components/Modal.jsx","components/Loader.jsx","App.jsx","index.js"],"names":["Heart","prop","className","favorite","viewBox","d","Modal","useState","clickedOutside","setClickedOutside","isAllImageLoaded","setIsAllImageLoaded","loading","setLoading","myRef","useRef","handleClickOutside","e","showModal","current","contains","target","useEffect","document","addEventListener","removeEventListener","setShowModal","selectedBreed","sub","length","newArr","Array","fill","r","map","v","setShowLoader","updateImage","idx","imageListCopy","ref","onClick","addToFavorite","favoriteList","includes","name","src","img","alt","onLoad","subImg","Loader","showLoader","App","breeds","setBreeds","setSelectedBreed","setFavoriteList","filterByFavorite","setFilterByFavorite","axios","method","url","then","response","status","data","message","console","log","catch","setModal","selectedBreedName","a","getRandomImage","breedImg","subBreedImgList","i","push","isSub","breed","subBreed","alert","type","htmlFor","Object","keys","listCopy","selectedBreedIndex","indexOf","splice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.689da1ec.chunk.js","sourcesContent":["import React from 'react';\n\nconst Heart = (prop) => {\n    return (\n        <>\n            <svg className={prop.favorite ? 'heart gray' : 'heart red'} viewBox=\"0 0 32 29.6\">\n                <path d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\n\tc6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"/>\n            </svg>\n        </>\n    );\n};\n\nexport default Heart;\n","import React, {useRef, useState, useEffect} from 'react';\nimport './modal.scss'\nimport Heart from \"./Heart\";\n\nconst Modal = (prop) => {\n    const [clickedOutside, setClickedOutside] = useState(false);\n    const [isAllImageLoaded, setIsAllImageLoaded] = useState([false]);\n    const [loading, setLoading] = useState(true);\n    const myRef = useRef();\n\n    const handleClickOutside = e => {\n        if (prop.showModal && !myRef.current.contains(e.target)) setClickedOutside(true);\n    };\n    const handleClickInside = () => setClickedOutside(false);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    });\n\n    useEffect(() => {\n        if (clickedOutside) prop.setShowModal(false);\n    }, [clickedOutside])\n\n    useEffect(() => {\n        if (prop.selectedBreed && prop.selectedBreed.sub.length > 0) {\n            const newArr = Array(prop.selectedBreed.sub.length + 1).fill(false);\n            setIsAllImageLoaded(newArr)\n        }\n    }, [prop.selectedBreed]);\n\n    useEffect(() => {\n        let r = true;\n        isAllImageLoaded.map(v => {\n            if (!v) r = false\n        })\n        if (r) {\n            setLoading(false);\n            prop.setShowLoader(false);\n        }\n    }, [isAllImageLoaded]);\n\n    const updateImage = (idx) => {\n        const imageListCopy = [...isAllImageLoaded];\n        imageListCopy[idx] = true;\n        setIsAllImageLoaded(imageListCopy);\n    }\n\n    if (prop.showModal) return (\n        <div className=\"modal__container\">\n            <div className={loading ? \"modal__contents hidden\" : \"modal__contents\"} ref={myRef}\n                 onClick={handleClickInside}>\n                <div className=\"modal__add\" onClick={prop.addToFavorite}>\n                    <span>\n                        <Heart favorite={prop.favoriteList.includes(prop.selectedBreed.name)}/>\n                    </span>\n                    {prop.favoriteList.includes(prop.selectedBreed.name)\n                        ? <span>remove from favorite</span>\n                        : <span>add to favorite</span>\n                    }\n                </div>\n                <h1>{prop.selectedBreed.name}</h1>\n                <div>\n                    <img\n                        src={prop.selectedBreed.img}\n                        alt={prop.selectedBreed}\n                        onLoad={() => updateImage(0)}\n                    />\n                </div>\n\n                {prop.selectedBreed.sub.length > 0 && <p>sub-breeds</p>}\n                {prop.selectedBreed.sub.length > 0 &&\n                prop.selectedBreed.sub.map((sub, idx) => {\n                    return (\n                        <div key={sub} className=\"modal__sub\">\n                            <h1>{sub}</h1>\n                            <div>\n                                <img\n                                    src={prop.selectedBreed.subImg[idx]}\n                                    alt={sub}\n                                    onLoad={() => updateImage(idx + 1)}\n                                />\n                            </div>\n                        </div>\n                    )\n                })}\n\n                <h2 onClick={() => {\n                    prop.setShowModal(false)\n                }}>close</h2>\n\n            </div>\n        </div>\n    );\n\n    else return <span>{}</span>\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst Loader = (prop) => {\n    if (prop.showLoader) return (\n        <div className=\"loader__container\">\n            <div className=\"loader__contents\">\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n                <div>{}</div>\n            </div>\n        </div>\n    )\n    return <span>{}</span>\n};\n\nexport default Loader;\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport './reset.css';\nimport './App.scss';\nimport Modal from './components/Modal';\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n    const [breeds, setBreeds] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [showLoader, setShowLoader] = useState(false);\n    const [selectedBreed, setSelectedBreed] = useState(null);\n    const [favoriteList, setFavoriteList] = useState([]);\n    const [filterByFavorite, setFilterByFavorite] = useState(false);\n\n    useEffect(() => {\n        setShowLoader(true);\n        axios({\n            method: 'get',\n            url: 'https://dog.ceo/api/breeds/list/all'\n        }).then(response => {\n            setShowLoader(false);\n            if (response.status === 200) {\n                setBreeds(response.data.message);\n                console.log(response.data.message);\n            }\n        }).catch(e => {\n            setShowLoader(false);\n            console.log(e);\n        })\n    }, []);\n\n    const setModal = async (selectedBreedName) => {\n        setShowLoader(true);\n        const breedImg = await getRandomImage(false, selectedBreedName);\n        const subBreedImgList = [];\n\n        if (breeds[selectedBreedName]) {\n            for (let i = 0; i < breeds[selectedBreedName].length; i++) {\n                const img = await getRandomImage(true, selectedBreedName, breeds[selectedBreedName][i]);\n                subBreedImgList.push(img);\n            }\n        }\n\n        setSelectedBreed({\n            'name': selectedBreedName,\n            'sub': breeds[selectedBreedName],\n            'img': breedImg,\n            'subImg': subBreedImgList\n        });\n        setShowModal(true);\n    }\n\n\n    const getRandomImage = async (isSub, breed, subBreed) => {\n        return axios({\n            method: 'get',\n            url: isSub ? `https://dog.ceo/api/breed/${breed}/${subBreed}/images/random` : `https://dog.ceo/api/breed/${breed}/images/random`\n        }).then(response => {\n            if (response.status === 200) {\n                return response.data.message;\n            }\n        }).catch(e => {\n            alert('error');\n            console.log(e);\n        })\n    }\n\n    const addToFavorite = () => {\n        const listCopy = [...favoriteList];\n        const selectedBreedIndex = listCopy.indexOf(selectedBreed.name);\n        if (selectedBreedIndex > -1) listCopy.splice(selectedBreedIndex, 1);\n        else listCopy.push(selectedBreed.name);\n\n        setFavoriteList(listCopy);\n    };\n\n    useEffect(() => {\n        if (!showModal) setShowLoader(false);\n    }, [showModal])\n\n\n    return (\n        <>\n            <div className=\"main__container\">\n                <Loader showLoader={showLoader}/>\n                <h1 className=\"main__title\">DOG BREEDS</h1>\n                {!breeds && <p>loading...</p>}\n                {breeds &&\n                <div>\n                    <input type=\"checkbox\" name=\"filter\" onClick={() => {\n                        setFilterByFavorite(!filterByFavorite)\n                    }}/>\n                    <label htmlFor=\"filter\">filter by favorite</label>\n                    <ol className=\"main__list\">\n                        {!filterByFavorite && Object.keys(breeds).map(breed => {\n                            return <li className=\"main__breed\"\n                                       key={breed}\n                                       onClick={() => {\n                                           setModal(breed)\n                                       }}>\n                                {breed}\n                            </li>\n                        })}\n\n                        {filterByFavorite && Object.keys(breeds).map(breed => {\n                            if (favoriteList.includes(breed)) {\n                                return <li className=\"main__breed\"\n                                           key={breed}\n                                           onClick={() => {\n                                               setModal(breed)\n                                           }}>\n                                    {breed}\n                                </li>\n                            }\n                        })}\n\n                    </ol>\n                </div>\n                }\n            </div>\n            <Modal showModal={showModal} setShowLoader={setShowLoader} setShowModal={setShowModal}\n                   selectedBreed={selectedBreed}\n                   favoriteList={favoriteList}\n                   addToFavorite={addToFavorite}\n            />\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}